// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  role      String
  password  String
  createdAt DateTime @default(now())
  @@map("users")
}

model Recipes {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String?
  image       String?
  theme       String?
  gallery     Gallery[]
  recipeInfo  RecipeInfo?
  ingredients Ingredients[]
  instructions Instructions[]
  createdAt   DateTime @default(now())
  @@map("recipes")
}

model Gallery {
  id        Int      @id @default(autoincrement())
  image     String
  recipeId  Int
  recipe    Recipes  @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  @@map("gallery")
}

model RecipeInfo {
  id        Int      @id @default(autoincrement())
  prepTime  Int?
  cookTime  Int?
  servings  Int?
  recipeId  Int      @unique
  recipe    Recipes  @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  @@map("recipeInfo")
}

model Ingredients {
  id        Int      @id @default(autoincrement())
  name      String
  quantity  String?
  recipeId  Int
  recipe    Recipes  @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  @@map("ingredients")
}

model Instructions {
  id        Int      @id @default(autoincrement())
  step      Int
  content   String
  recipeId  Int
  recipe    Recipes  @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  @@map("instructions")
}
